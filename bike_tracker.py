from datetime import datetime
import sys

now = datetime.now()

# Nur fortfahren, wenn Minute durch 5 teilbar ist
#if now.minute % 5 != 0:
 #   print(f"⏱️ Abgebrochen – Nicht zur 5-Minuten-Zeit: {now.strftime('%H:%M')}")
  #  sys.exit()
    
# -*- coding: utf-8 -*-
"""bike_tracker.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AqexZIGzghloRlfq4o7ZkM40Fc2xSdkd
"""

#Task scheduler code
# bike_tracker.py

import requests
import csv
import os
import time
from datetime import datetime

FILENAME = f"data/bike_data_{datetime.now().date()}.csv"
os.makedirs("data", exist_ok=True)

# Header nur, wenn Datei nicht existiert
write_header = not os.path.exists(FILENAME)

url = "https://api.nextbike.net/maps/nextbike-live.json?"
res = requests.get(url)
data = res.json()

timestamp = datetime.now().isoformat()

with open(FILENAME, mode="a", newline="", encoding="utf-8") as file:
    writer = csv.writer(file)
    if write_header:
        writer.writerow(["timestamp", "place_name", "num_bikes", "bike_number"])

    for country in data["countries"]:
        if country["name"] == "WienMobil Rad":
            for city in country["cities"]:
                if city["name"].lower() == "wien":
                    for place in city["places"]:
                        bike_numbers = place.get("bike_numbers", [])
                        for bike_id in bike_numbers:
                            writer.writerow([
                                timestamp,
                                place["name"],
                                place.get("bikes", 0),
                                bike_id
                            ])
print(f"{timestamp} – Abfrage erfolgreich gespeichert in {FILENAME}")
